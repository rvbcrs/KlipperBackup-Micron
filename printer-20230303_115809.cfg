# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Micron Cfg for BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


#####################################################################
#   Important other files
#####################################################################
[include mainsail.cfg]
[include klicky/klicky-probe.cfg]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_300016001750344D30353320-if00
restart_method: command
##--------------------------------------------------------------------

[mcu EBBCan]
# run the following command to locate the uuid and replace below   ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0
canbus_uuid: ca18cbb48d6f

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

## TEMPERATURE SENSOR OVER THE CANBOARD
[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[temperature_fan raspberry_pi]
pin: PA8 #This is where you change the mcu name and/or pin
control: watermark #This is the hysteresis we will use instead of pid.
max_delta: 3.0 #How much to go over/under target temp before toggling the fan
shutdown_speed: 1 #Turn the fan on at max if an error causes shutdown
sensor_type: temperature_host #this is where we get the temperature
min_temp: 0 #min/max are just for sanity checks to detect a malfunctioning sensor
max_temp: 100
target_temp: 55.0 #The temperature at which to toggle the fan

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# [safe_z_home]
# home_xy_position: 50,50
# #   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
# #   performed. This parameter must be provided.
# speed: 100
# #   Speed at which the toolhead is moved to the safe Z home
# #   coordinate. The default is 50 mm/s
# z_hop: 10
# #   Distance (in mm) to lift the Z axis prior to homing. This is
# #   applied to any homing command, even if it doesn't home the Z axis.
# #   If the Z axis is already homed and the current Z position is less
# #   than z_hop, then this will lift the head to a height of z_hop. If
# #   the Z axis is not already homed the head is lifted by z_hop.
# #   The default is to not implement Z hop.
# z_hop_speed: 15.0
# #   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
# #   default is 15 mm/s.
# move_to_previous: False
# #   When set to True, the X and Y axes are reset to their previous
# #   positions after Z axis homing. The default is False.

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
mesh_min: 15, 15
mesh_max: 100,100

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 32 #40
microsteps: 32
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop #PG6 
position_min: -20
##--------------------------------------------------------------------

##  Uncomment below for Micron build
position_endstop: 115
position_max: 115

##  Uncomment for Micron+ build
#position_endstop: 180
#position_max: 180

##--------------------------------------------------------------------
homing_speed: 60   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: PG6      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 120  # 255 is most sensitive value, 0 is least sensitive

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 32 #40
microsteps: 32
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop #PG9
position_min: -20
##--------------------------------------------------------------------

##  Uncomment below for Micron build
position_endstop: 123
position_max: 123

##  Uncomment for Micron+ build
#position_endstop: 190
#position_max: 190

##--------------------------------------------------------------------
homing_speed: 60  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: PG9      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 130  # 255 is most sensitive value, 0 is least sensitive

 
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 32
gear_ratio: 64:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop #PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0
##--------------------------------------------------------------------

##  Uncomment below for Micron build
position_max: 110

##  Uncomment below for Micron+ build
#position_max: 165

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 999999

## EXTRUDER
[extruder]
step_pin: EBBCan:PD0
dir_pin: !EBBCan:PD1
enable_pin: !EBBCan:PD2
rotation_distance: 21.114 #22.6789511   #Bondtech 5mm Drive Gears
gear_ratio: 50:10              #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan: PB13            #PB13 FOR V1.2 OR PA2 FOR V1.1
sensor_pin: EBBCan: PA3
#sensor_type: PT1000   #our pt1000 works directly. there is no need of max amplifier. just place a jumper in pt1000  
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 2200 
min_extrude_temp: 0 #170
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 350

[tmc2209 extruder]
uart_pin: EBBCan:PA15
run_current: 0.600    # for LDO 36STH20-1004AHG
stealthchop_threshold: 0
sense_resistor: 0.110

[firmware_retraction]
retract_length: 0.75
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 60
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of additional filament to add when
#   unretracting.
unretract_speed: 60
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#####################################################################
#   Bed Heater
#####################################################################
[verify_heater heater_bed]
#max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 120
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[heater_bed]
##  Heater Pin - BED_OUT - PA1
##  Thermistor - TB - PF3
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Klicky Probe - Since this is just an endstop switch its wired up to one of the endstop ports
## For the DIAG_7 port.  Change to !PG15 if probe is NO.
pin: ^EBBCan:PB8
x_offset: 0
y_offset: 26.0
#z_offset: 6.42
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

## PART COOLING FAN
[fan]
pin: EBBCan: PA0
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

## EXTRUDER FAN
[heater_fan hotend_fan]
pin: EBBCan:PA1
heater: extruder
max_power: 0.2
shutdown_speed: 0
kick_start_time: 0.5
# heater: extruder
heater_temp: 50.0

# [fan]
# ##  Print Cooling Fan - FAN0 - MAKE SURE TO SET THE VOLTAGE JUMPER TO 5V , MOST 3007 FANS ARE 5V
# pin: PA8
# kick_start_time: 0.5
# ##  Depending on your fan, you may need to increase this value
# ##  if your fan will not start. Can change cycle_time (increase)
# ##  if your fan is not able to slow down effectively
# off_below: 0.10



[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[quad_gantry_level]
#--------------------------------------------------------------------

##  Gantry Corners for Micron Build
##  Uncomment for Micron build
gantry_corners:
  -54.5,-2.15
  170,180
#  Probe points
points:
  5,5
  5,80
  110,80
  110,5

##  Gantry Corners for Micron+ Build
##  Uncomment for Micron+ build
#gantry_corners:
#   -54.5,-2.15
#   240.5,191.45
##  Probe points
#points:
#   10,10
#   10,170
#   170,170
#   170,10

#--------------------------------------------------------------------

speed: 100
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro _HOME_X]
gcode:
    G28 X

[gcode_macro _HOME_Y]
gcode:
    G28 Y

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    BED_MESH_PROFILE LOAD="default"
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X50 Y50 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F3600  ; park nozzle at center
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute

[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_arcs]
resolution: 0.1

[gcode_macro m201]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
      SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m203]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY={speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set corner_speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={corner_speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M900]
gcode:
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 0.100
#*#
#*# [probe]
#*# z_offset = 6.750
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.002500, 0.002500, 0.015000, 0.027500, 0.035000
#*# 	0.012500, 0.015000, 0.015000, 0.020000, 0.025000
#*# 	0.010000, 0.012500, 0.000000, 0.007500, 0.007500
#*# 	-0.022500, -0.012500, -0.010000, 0.000000, 0.015000
#*# 	0.017500, 0.017500, 0.012500, 0.017500, 0.042500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 100.0
#*# min_y = 15.0
#*# max_y = 100.0
